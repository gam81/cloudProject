import os
os.system("git clone https://github.com/gam81/cloudProject")
os.system("cd cloudProject")
os.system("sudo apt-get install kubectl")
os.system("gcloud container clusters get-credentials cloud-cluster --region us-central1 --project savvy-surge-327723")
os.system("kubectl apply -f yamls/namenode-deployment.yaml")
os.system("kubectl apply -f yamls/namenode-service.yaml")
os.system("kubectl apply -f yamls/datanode-deployment.yaml")
os.system("kubectl apply -f yamls/jupyter-deployment.yaml")
os.system("kubectl apply -f yamls/jupyter-service.yaml")
os.system("kubectl apply -f yamls/sonar-deployment.yaml")
os.system("kubectl apply -f yamls/sonar-service.yaml")
os.system("kubectl apply -f yamls/sonar-service.yaml")
os.system("kubectl apply -f yamls/spark-service.yaml")
os.system("cd yamls")
os.system("kubectl expose deployment jupyter-notebook --port=8888 --protocol=TCP --target-port=8888 --type=LoadBalancer --name=jupyter-service")
os.system("kubectl expose deployment pyspark-notebook --port=8888 --protocol=TCP --target-port=8888 --type=LoadBalancer --name=pyspark-service")
os.system("kubectl expose deployment sonarqube --port=9000 --protocol=TCP --target-port=9000 --type=LoadBalancer --name=sonarqube-service")
os.system("kubectl get service -o wide")
os.system("ls -l")
os.system("ls -l")
os.system("ls -l")
os.system("ls -l")
os.system("ls -l")
os.system("ls -l")
